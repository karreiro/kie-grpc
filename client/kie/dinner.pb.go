// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dinner.proto

package kie

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DinnerInput struct {
	GuestsWithChildren   bool     `protobuf:"varint,1,opt,name=guestsWithChildren,proto3" json:"guestsWithChildren,omitempty"`
	Season               string   `protobuf:"bytes,2,opt,name=season,proto3" json:"season,omitempty"`
	NumberOfGuests       int32    `protobuf:"varint,3,opt,name=numberOfGuests,proto3" json:"numberOfGuests,omitempty"`
	Temp                 int32    `protobuf:"varint,4,opt,name=temp,proto3" json:"temp,omitempty"`
	RainProbability      int32    `protobuf:"varint,5,opt,name=rainProbability,proto3" json:"rainProbability,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DinnerInput) Reset()         { *m = DinnerInput{} }
func (m *DinnerInput) String() string { return proto.CompactTextString(m) }
func (*DinnerInput) ProtoMessage()    {}
func (*DinnerInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead7db684dff4230, []int{0}
}

func (m *DinnerInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DinnerInput.Unmarshal(m, b)
}
func (m *DinnerInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DinnerInput.Marshal(b, m, deterministic)
}
func (m *DinnerInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DinnerInput.Merge(m, src)
}
func (m *DinnerInput) XXX_Size() int {
	return xxx_messageInfo_DinnerInput.Size(m)
}
func (m *DinnerInput) XXX_DiscardUnknown() {
	xxx_messageInfo_DinnerInput.DiscardUnknown(m)
}

var xxx_messageInfo_DinnerInput proto.InternalMessageInfo

func (m *DinnerInput) GetGuestsWithChildren() bool {
	if m != nil {
		return m.GuestsWithChildren
	}
	return false
}

func (m *DinnerInput) GetSeason() string {
	if m != nil {
		return m.Season
	}
	return ""
}

func (m *DinnerInput) GetNumberOfGuests() int32 {
	if m != nil {
		return m.NumberOfGuests
	}
	return 0
}

func (m *DinnerInput) GetTemp() int32 {
	if m != nil {
		return m.Temp
	}
	return 0
}

func (m *DinnerInput) GetRainProbability() int32 {
	if m != nil {
		return m.RainProbability
	}
	return 0
}

type DinnerOutput struct {
	Dish                 string   `protobuf:"bytes,1,opt,name=dish,proto3" json:"dish,omitempty"`
	Drinks               []string `protobuf:"bytes,2,rep,name=drinks,proto3" json:"drinks,omitempty"`
	WhereToEat           string   `protobuf:"bytes,3,opt,name=whereToEat,proto3" json:"whereToEat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DinnerOutput) Reset()         { *m = DinnerOutput{} }
func (m *DinnerOutput) String() string { return proto.CompactTextString(m) }
func (*DinnerOutput) ProtoMessage()    {}
func (*DinnerOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead7db684dff4230, []int{1}
}

func (m *DinnerOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DinnerOutput.Unmarshal(m, b)
}
func (m *DinnerOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DinnerOutput.Marshal(b, m, deterministic)
}
func (m *DinnerOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DinnerOutput.Merge(m, src)
}
func (m *DinnerOutput) XXX_Size() int {
	return xxx_messageInfo_DinnerOutput.Size(m)
}
func (m *DinnerOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_DinnerOutput.DiscardUnknown(m)
}

var xxx_messageInfo_DinnerOutput proto.InternalMessageInfo

func (m *DinnerOutput) GetDish() string {
	if m != nil {
		return m.Dish
	}
	return ""
}

func (m *DinnerOutput) GetDrinks() []string {
	if m != nil {
		return m.Drinks
	}
	return nil
}

func (m *DinnerOutput) GetWhereToEat() string {
	if m != nil {
		return m.WhereToEat
	}
	return ""
}

func init() {
	proto.RegisterType((*DinnerInput)(nil), "kie.DinnerInput")
	proto.RegisterType((*DinnerOutput)(nil), "kie.DinnerOutput")
}

func init() { proto.RegisterFile("dinner.proto", fileDescriptor_ead7db684dff4230) }

var fileDescriptor_ead7db684dff4230 = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0x4d, 0xdb, 0xad, 0x76, 0x2c, 0xfe, 0x99, 0x83, 0x04, 0x0f, 0x52, 0x2a, 0x48, 0x4f,
	0x45, 0xf4, 0xe6, 0x71, 0x5d, 0x91, 0xbd, 0xb8, 0xa5, 0x08, 0x82, 0xb7, 0x76, 0x1b, 0xdb, 0xd0,
	0xdd, 0xa4, 0x24, 0x29, 0xe2, 0xeb, 0xf8, 0x1a, 0xbe, 0x9c, 0x34, 0xdd, 0x43, 0x59, 0xf6, 0x36,
	0xf3, 0xfb, 0x48, 0xf8, 0xf1, 0x0d, 0x84, 0x15, 0x17, 0x82, 0xa9, 0xb4, 0x53, 0xd2, 0x48, 0x74,
	0x5b, 0xce, 0xe2, 0x3f, 0x02, 0xa7, 0x0b, 0x4b, 0x97, 0xa2, 0xeb, 0x0d, 0xa6, 0x80, 0x75, 0xcf,
	0xb4, 0xd1, 0x1f, 0xdc, 0x34, 0xcf, 0x0d, 0xdf, 0x54, 0x8a, 0x09, 0x4a, 0x22, 0x92, 0x9c, 0xe4,
	0x07, 0x12, 0xbc, 0x02, 0x5f, 0xb3, 0x42, 0x4b, 0x41, 0x9d, 0x88, 0x24, 0x41, 0xbe, 0xdb, 0xf0,
	0x0e, 0xce, 0x44, 0xbf, 0x2d, 0x99, 0x5a, 0x7d, 0xbd, 0xda, 0x57, 0xd4, 0x8d, 0x48, 0x32, 0xcb,
	0xf7, 0x28, 0x22, 0x78, 0x86, 0x6d, 0x3b, 0xea, 0xd9, 0xd4, 0xce, 0x98, 0xc0, 0xb9, 0x2a, 0xb8,
	0xc8, 0x94, 0x2c, 0x8b, 0x92, 0x6f, 0xb8, 0xf9, 0xa1, 0x33, 0x1b, 0xef, 0xe3, 0xf8, 0x13, 0xc2,
	0x51, 0x7e, 0xd5, 0x9b, 0xc1, 0x1e, 0xc1, 0xab, 0xb8, 0x6e, 0xac, 0x6f, 0x90, 0xdb, 0x79, 0x30,
	0xac, 0x14, 0x17, 0xad, 0xa6, 0x4e, 0xe4, 0x0e, 0x86, 0xe3, 0x86, 0x37, 0x00, 0xdf, 0x0d, 0x53,
	0xec, 0x5d, 0xbe, 0x14, 0xc6, 0xda, 0x05, 0xf9, 0x84, 0x3c, 0x3c, 0x81, 0x3f, 0xfe, 0x8d, 0xf7,
	0x70, 0xdc, 0x29, 0xb9, 0x66, 0x5a, 0xe3, 0x45, 0xda, 0x72, 0x96, 0x4e, 0x0a, 0xbb, 0xbe, 0x9c,
	0x90, 0xd1, 0x22, 0x3e, 0x9a, 0xdf, 0x42, 0x28, 0x55, 0x6d, 0x93, 0x5a, 0x75, 0xeb, 0xf9, 0xae,
	0xe2, 0x6c, 0xe8, 0x3d, 0x23, 0xbf, 0x8e, 0xbb, 0x58, 0xbe, 0x95, 0xbe, 0x3d, 0xc3, 0xe3, 0x7f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0x3e, 0x0a, 0x51, 0x96, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DinnerClient is the client API for Dinner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DinnerClient interface {
	Process(ctx context.Context, in *DinnerInput, opts ...grpc.CallOption) (*DinnerOutput, error)
}

type dinnerClient struct {
	cc *grpc.ClientConn
}

func NewDinnerClient(cc *grpc.ClientConn) DinnerClient {
	return &dinnerClient{cc}
}

func (c *dinnerClient) Process(ctx context.Context, in *DinnerInput, opts ...grpc.CallOption) (*DinnerOutput, error) {
	out := new(DinnerOutput)
	err := c.cc.Invoke(ctx, "/kie.Dinner/process", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DinnerServer is the server API for Dinner service.
type DinnerServer interface {
	Process(context.Context, *DinnerInput) (*DinnerOutput, error)
}

// UnimplementedDinnerServer can be embedded to have forward compatible implementations.
type UnimplementedDinnerServer struct {
}

func (*UnimplementedDinnerServer) Process(ctx context.Context, req *DinnerInput) (*DinnerOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Process not implemented")
}

func RegisterDinnerServer(s *grpc.Server, srv DinnerServer) {
	s.RegisterService(&_Dinner_serviceDesc, srv)
}

func _Dinner_Process_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DinnerInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerServer).Process(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kie.Dinner/Process",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerServer).Process(ctx, req.(*DinnerInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dinner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kie.Dinner",
	HandlerType: (*DinnerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "process",
			Handler:    _Dinner_Process_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dinner.proto",
}
